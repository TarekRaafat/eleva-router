!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).ElevaRouter=t()}(this,(function(){"use strict";class e{constructor(e,t={}){if(this.eleva=e,this.container=t.container,!this.container)throw new Error("Router requires a container DOM element in options.");this.routes=t.routes||[],this.mode=t.mode||"hash",this.defaultRoute=t.defaultRoute||null}start(){if("hash"===this.mode)window.addEventListener("hashchange",(()=>this.routeChanged()));else{if("query"!==this.mode&&"history"!==this.mode)throw new Error(`Invalid routing mode: ${this.mode}`);window.addEventListener("popstate",(()=>this.routeChanged()))}this.routeChanged()}routeChanged(){let e,t,o;if("hash"===this.mode){o=window.location.href;let n=window.location.hash.slice(1)||"";[e,t]=n.split("?"),e=e||"/"}else if("query"===this.mode){o=window.location.href;const n=window.location.search,i=new URLSearchParams(n);e=i.get("page")||"",i.delete("page"),t=i.toString(),e=e||"/"}else{if("history"!==this.mode)throw new Error("Invalid router mode: "+this.mode);o=window.location.href,e=window.location.pathname||"/",t=window.location.search?window.location.search.slice(1):""}"/"!==e.charAt(0)&&(e="/"+e);const n=this.parseQuery(t);let i=this.matchRoute(e);if(!i&&this.defaultRoute&&(i=this.defaultRoute),i){const t=this.wrapComponentWithRoute(i.component,{path:e,query:n,fullUrl:o}),s=i.props||{};this.container.innerHTML="",this.eleva.mount(this.container,t,s)}}parseQuery(e){const t={};return e?(e.split("&").forEach((e=>{const[o,n]=e.split("=");o&&(t[decodeURIComponent(o)]=n?decodeURIComponent(n):"")})),t):t}matchRoute(e){return this.routes.find((t=>t.path===e))}navigate(e){if("hash"===this.mode)"/"===e||""===e?(history.replaceState(null,"",window.location.pathname+window.location.search),this.routeChanged()):window.location.hash=e;else if("query"===this.mode){const t=new URLSearchParams(window.location.search);"/"===e||""===e?t.delete("page"):t.set("page",e);const o=t.toString(),n=window.location.pathname+(o?"?"+o:"");history.pushState({},"",n),this.routeChanged()}else"history"===this.mode&&(history.pushState({},"",e),this.routeChanged())}addRoute(e){this.routes.push(e)}wrapComponentWithRoute(e,t){let o=e;if("string"==typeof e&&(o=this.eleva._components[e],!o))throw new Error(`Component "${e}" not registered.`);const n={...o},i=n.setup;if(n.setup=e=>(e.route=t,e.navigate=this.navigate.bind(this),i?i(e):{}),n.children){const e={...n.children};n.children={},Object.keys(e).forEach((o=>{const i=e[o];n.children[o]=this.wrapComponentWithRoute(i,t)}))}return n}}return{install(t,o={}){const n=o.routes||[];let i=0;n.forEach((e=>{if("object"==typeof e.component){let o=e.component.name;o||(o="AutoRegComponent_"+i++),t.component(o,e.component),e.component=o}}));const s=new e(t,o);t.router=s,s.start()}}}));
//# sourceMappingURL=eleva-router.min.js.map
